{"ast":null,"code":"var _jsxFileName = \"/Users/shivam/Development/VS Code/HackAthon18Frontend/src/component/Messages.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { formatDistanceToNow } from 'date-fns';\nimport logo from '../logo.svg';\nimport { chatHistory, gptResponse } from '../services/chatService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messages = ({\n  chatId\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isSending, setIsSending] = useState(false);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      if (!chatId) return;\n      setLoading(true);\n      setError(null);\n      try {\n        const data = await chatHistory(chatId);\n        const sortedMessages = data.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n        setMessages(sortedMessages);\n      } catch (err) {\n        console.error(\"Error fetching messages:\", err);\n        setError(\"Failed to load messages. Please try again.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMessages();\n  }, [chatId]);\n  const handleSendMessage = async () => {\n    if (!inputValue.trim() || isSending) return;\n    setIsSending(true);\n    try {\n      const userMessage = {\n        content: inputValue.trim(),\n        role: 'user',\n        timestamp: new Date().toISOString()\n      };\n\n      // Optimistically add user's message\n      setMessages(prevMessages => [...prevMessages, userMessage]);\n      const response = await gptResponse(chatId, inputValue.trim());\n\n      // Add bot response with `isTyping` flag\n      setMessages(prevMessages => [...prevMessages, {\n        content: response.message,\n        role: 'bot',\n        timestamp: new Date().toISOString(),\n        isTyping: true // Mark as animating\n      }]);\n      setInputValue(\"\");\n    } catch (err) {\n      console.error(\"Error sending message:\", err);\n      setError(\"Failed to send message. Please try again.\");\n    } finally {\n      setIsSending(false);\n    }\n  };\n  useEffect(() => {\n    // Typing animation logic for the latest bot message\n    const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n    const animateTyping = async () => {\n      const lastMessageIndex = messages.length - 1;\n      const lastMessage = messages[lastMessageIndex];\n\n      // Ensure we animate only the last bot message\n      if (lastMessage !== null && lastMessage !== void 0 && lastMessage.isTyping) {\n        const text = lastMessage.content;\n        let animatedText = \"\";\n        for (let char of text) {\n          animatedText += char;\n          await sleep(50); // Adjust typing speed\n          setMessages(prevMessages => {\n            const updatedMessages = [...prevMessages];\n            updatedMessages[lastMessageIndex] = {\n              ...lastMessage,\n              content: animatedText\n            };\n            return updatedMessages;\n          });\n        }\n\n        // Remove `isTyping` flag after animation\n        setMessages(prevMessages => {\n          const updatedMessages = [...prevMessages];\n          updatedMessages[lastMessageIndex] = {\n            ...lastMessage,\n            isTyping: false\n          };\n          return updatedMessages;\n        });\n      }\n    };\n    animateTyping();\n  }, [messages]);\n  if (!chatId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-gray-500 text-center p-5\",\n      children: \"Select a chat to view messages.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-gray-500 text-center p-5\",\n      children: \"Loading messages...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500 text-center p-5\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-grow h-full flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full flex-grow bg-gray-100 my-2 p-2 overflow-y-auto\",\n      children: messages.map((item, index) => item.role === 'user' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-end w-auto m-1 rounded-xl rounded-br-none sm:w-3/4 md:w-auto outline outline-black\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-black\",\n              children: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-end text-xs text-gray-400\",\n              children: formatDistanceToNow(new Date(item.timestamp), {\n                addSuffix: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 29\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-end w-3/4\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"w-8 h-8 m-3 rounded-full\",\n          src: logo,\n          alt: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 mx-3 my-1 rounded-2xl rounded-bl-none sm:w-3/4 md:w-3/6 outline outline-black\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: `text-black ${item.isTyping ? \"typing-animation\" : \"\"}`,\n            \"data-text\": item.isTyping ? item.content : undefined,\n            children: item.isTyping ? \"\" : item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-400\",\n            children: formatDistanceToNow(new Date(item.timestamp), {\n              addSuffix: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-15 p-3 rounded-xl rounded-tr-none rounded-tl-none bg-gray-100 dark:bg-gray-800\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-2 text-gray-600 dark:text-gray-200\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-6 w-6\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M14.828 14.828a4 4 0 01-5.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-chat flex flex-grow p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input text-gray-700 dark:text-gray-200 text-sm p-5 focus:outline-none bg-gray-100 dark:bg-gray-800 flex-grow rounded-l-md\",\n            type: \"text\",\n            placeholder: \"Type your message ...\",\n            value: inputValue,\n            onChange: e => setInputValue(e.target.value),\n            onKeyPress: e => e.key === 'Enter' && handleSendMessage(),\n            disabled: isSending\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `bg-gray-100 dark:bg-gray-800 dark:text-gray-200 flex justify-center items-center pr-3 text-gray-400 rounded-r-md cursor-pointer ${isSending ? 'opacity-50' : ''}`,\n            onClick: handleSendMessage,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              className: \"h-6 w-6\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 9\n  }, this);\n};\n_s(Messages, \"wuMxo4kxUKbU1hhJ6sCn9Hy/jpM=\");\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useEffect","useState","formatDistanceToNow","logo","chatHistory","gptResponse","jsxDEV","_jsxDEV","Messages","chatId","_s","messages","setMessages","loading","setLoading","error","setError","inputValue","setInputValue","isSending","setIsSending","fetchMessages","data","sortedMessages","sort","a","b","Date","timestamp","err","console","handleSendMessage","trim","userMessage","content","role","toISOString","prevMessages","response","message","isTyping","sleep","ms","Promise","resolve","setTimeout","animateTyping","lastMessageIndex","length","lastMessage","text","animatedText","char","updatedMessages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","addSuffix","src","alt","undefined","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","type","placeholder","value","onChange","e","target","onKeyPress","key","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/shivam/Development/VS Code/HackAthon18Frontend/src/component/Messages.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { formatDistanceToNow } from 'date-fns';\nimport logo from '../logo.svg';\nimport { chatHistory, gptResponse } from '../services/chatService';\n\nconst Messages = ({ chatId }) => {\n    const [messages, setMessages] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [inputValue, setInputValue] = useState(\"\");\n    const [isSending, setIsSending] = useState(false);\n\n    useEffect(() => {\n        const fetchMessages = async () => {\n            if (!chatId) return;\n            setLoading(true);\n            setError(null);\n\n            try {\n                const data = await chatHistory(chatId);\n                const sortedMessages = data.sort(\n                    (a, b) => new Date(a.timestamp) - new Date(b.timestamp)\n                );\n                setMessages(sortedMessages);\n            } catch (err) {\n                console.error(\"Error fetching messages:\", err);\n                setError(\"Failed to load messages. Please try again.\");\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchMessages();\n    }, [chatId]);\n\n    const handleSendMessage = async () => {\n        if (!inputValue.trim() || isSending) return;\n        setIsSending(true);\n\n        try {\n            const userMessage = {\n                content: inputValue.trim(),\n                role: 'user',\n                timestamp: new Date().toISOString(),\n            };\n\n            // Optimistically add user's message\n            setMessages((prevMessages) => [...prevMessages, userMessage]);\n\n            const response = await gptResponse(chatId, inputValue.trim());\n\n            // Add bot response with `isTyping` flag\n            setMessages((prevMessages) => [\n                ...prevMessages,\n                {\n                    content: response.message,\n                    role: 'bot',\n                    timestamp: new Date().toISOString(),\n                    isTyping: true, // Mark as animating\n                },\n            ]);\n            setInputValue(\"\");\n        } catch (err) {\n            console.error(\"Error sending message:\", err);\n            setError(\"Failed to send message. Please try again.\");\n        } finally {\n            setIsSending(false);\n        }\n    };\n\n    useEffect(() => {\n        // Typing animation logic for the latest bot message\n        const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n        const animateTyping = async () => {\n            const lastMessageIndex = messages.length - 1;\n            const lastMessage = messages[lastMessageIndex];\n\n            // Ensure we animate only the last bot message\n            if (lastMessage?.isTyping) {\n                const text = lastMessage.content;\n                let animatedText = \"\";\n\n                for (let char of text) {\n                    animatedText += char;\n                    await sleep(50); // Adjust typing speed\n                    setMessages((prevMessages) => {\n                        const updatedMessages = [...prevMessages];\n                        updatedMessages[lastMessageIndex] = {\n                            ...lastMessage,\n                            content: animatedText,\n                        };\n                        return updatedMessages;\n                    });\n                }\n\n                // Remove `isTyping` flag after animation\n                setMessages((prevMessages) => {\n                    const updatedMessages = [...prevMessages];\n                    updatedMessages[lastMessageIndex] = {\n                        ...lastMessage,\n                        isTyping: false,\n                    };\n                    return updatedMessages;\n                });\n            }\n        };\n\n        animateTyping();\n    }, [messages]);\n\n    if (!chatId) {\n        return (\n            <div className=\"text-gray-500 text-center p-5\">\n                Select a chat to view messages.\n            </div>\n        );\n    }\n\n    if (loading) {\n        return (\n            <div className=\"text-gray-500 text-center p-5\">\n                Loading messages...\n            </div>\n        );\n    }\n\n    if (error) {\n        return (\n            <div className=\"text-red-500 text-center p-5\">\n                {error}\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"flex-grow h-full flex flex-col\">\n            {/* Messages List */}\n            <div className=\"w-full flex-grow bg-gray-100 my-2 p-2 overflow-y-auto\">\n                {messages.map((item, index) => (\n                    item.role === 'user' ? (\n                        <div key={index} className=\"flex justify-end\">\n                            <div className=\"flex items-end w-auto m-1 rounded-xl rounded-br-none sm:w-3/4 md:w-auto outline outline-black\">\n                                <div className=\"p-2\">\n                                    <p className=\"text-black\">{item.content}</p>\n                                    <div className=\"flex justify-end text-xs text-gray-400\">\n                                        {formatDistanceToNow(new Date(item.timestamp), { addSuffix: true })}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    ) : (\n                        <div key={index} className=\"flex items-end w-3/4\">\n                            <img className=\"w-8 h-8 m-3 rounded-full\" src={logo} alt=\"avatar\" />\n                            <div className=\"p-3 mx-3 my-1 rounded-2xl rounded-bl-none sm:w-3/4 md:w-3/6 outline outline-black\">\n                                <p\n                                    className={`text-black ${item.isTyping ? \"typing-animation\" : \"\"}`}\n                                    data-text={item.isTyping ? item.content : undefined}\n                                >\n                                    {item.isTyping ? \"\" : item.content}\n                                </p>\n                                <div className=\"text-xs text-gray-400\">\n                                    {formatDistanceToNow(new Date(item.timestamp), { addSuffix: true })}\n                                </div>\n                            </div>\n                        </div>\n                    )\n                ))}\n            </div>\n\n            {/* Message Input Section */}\n            <div className=\"h-15 p-3 rounded-xl rounded-tr-none rounded-tl-none bg-gray-100 dark:bg-gray-800\">\n                <div className=\"flex items-center\">\n                    <div className=\"p-2 text-gray-600 dark:text-gray-200\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                        </svg>\n                    </div>\n                    <div className=\"search-chat flex flex-grow p-2\">\n                        <input\n                            className=\"input text-gray-700 dark:text-gray-200 text-sm p-5 focus:outline-none bg-gray-100 dark:bg-gray-800 flex-grow rounded-l-md\"\n                            type=\"text\"\n                            placeholder=\"Type your message ...\"\n                            value={inputValue}\n                            onChange={(e) => setInputValue(e.target.value)}\n                            onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n                            disabled={isSending}\n                        />\n                        <div\n                            className={`bg-gray-100 dark:bg-gray-800 dark:text-gray-200 flex justify-center items-center pr-3 text-gray-400 rounded-r-md cursor-pointer ${isSending ? 'opacity-50' : ''}`}\n                            onClick={handleSendMessage}\n                        >\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\n                            </svg>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Messages;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}