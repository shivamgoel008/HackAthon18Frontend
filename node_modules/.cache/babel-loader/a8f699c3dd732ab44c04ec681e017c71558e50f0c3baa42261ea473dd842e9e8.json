{"ast":null,"code":"var _jsxFileName = \"/Users/shivam/Development/VS Code/HackAthon18Frontend/src/component/Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Conversation from './Conversation';\nimport Messages from './Messages';\nimport { v4 as uuidv4 } from 'uuid';\nimport { allChatHistory, gptResponse, deleteChatHistory, saveMessage } from '../services/chatService';\nimport { formatDistanceToNow } from 'date-fns';\nimport Header from './Header';\nimport { APPLICATION_NAME } from '../Utils/constants';\nimport { getCookie, getSubjectFromJwt, getTextBeforeAt } from '../Utils/helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [selectedChatId, setSelectedChatId] = useState(null);\n  const fetchChatHistory = async () => {\n    try {\n      const response = await allChatHistory();\n      // sort in descending order: newest first\n      const sortedResponse = response.sort((a, b) => {\n        const aTime = new Date(a.messages[0].timestamp);\n        const bTime = new Date(b.messages[0].timestamp);\n        return bTime - aTime;\n      });\n      const modifiedData = sortedResponse.map(item => ({\n        chatId: item.chat_id,\n        time: formatDistanceToNow(new Date(item.messages[0].timestamp), {\n          addSuffix: true\n        }),\n        message: item.messages[0].content\n      }));\n      setData([...modifiedData]);\n    } catch (error) {\n      console.error(\"Error fetching chat history:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchChatHistory();\n  }, []); // fetch chat history on initial render\n\n  const handleNewChatClick = async () => {\n    const chat_id = uuidv4();\n    try {\n      const username = getTextBeforeAt(getSubjectFromJwt(getCookie()));\n      await saveMessage(chat_id, \"Hi\" + username + \", How can i help you\");\n      fetchChatHistory(); // re-fetch chat history after creating a new chat\n      setSelectedChatId(chat_id);\n    } catch (error) {\n      console.error(\"Error creating new chat:\", error);\n    }\n  };\n  const handleChatSelect = chatId => {\n    setSelectedChatId(chatId);\n  };\n  const handleChatDelete = chatId => {\n    //todo\n    deleteChatHistory(chatId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-grow overflow-hidden  mt-px bg-white dark:bg-[#171717]\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-80 h-full  p-2 hidden md:block \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-full overflow-y-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xl font-extrabold text-white p-3\",\n            children: APPLICATION_NAME\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg font-semibold text-white p-3\",\n              children: \"Recent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg font-semibold text-white p-3 cursor-pointer hover:text-gray-300\",\n              onClick: handleNewChatClick,\n              children: \"New Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Conversation, {\n            data: data,\n            onClick: handleChatSelect,\n            onDelete: handleChatDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow h-full p-2 rounded-md overflow-y-auto\",\n        children: /*#__PURE__*/_jsxDEV(Messages, {\n          chatId: selectedChatId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"pv+piWBS5FGrNXL8PiTdQKFCjvQ=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","Conversation","Messages","v4","uuidv4","allChatHistory","gptResponse","deleteChatHistory","saveMessage","formatDistanceToNow","Header","APPLICATION_NAME","getCookie","getSubjectFromJwt","getTextBeforeAt","jsxDEV","_jsxDEV","Chat","_s","data","setData","selectedChatId","setSelectedChatId","fetchChatHistory","response","sortedResponse","sort","a","b","aTime","Date","messages","timestamp","bTime","modifiedData","map","item","chatId","chat_id","time","addSuffix","message","content","error","console","handleNewChatClick","username","handleChatSelect","handleChatDelete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onDelete","_c","$RefreshReg$"],"sources":["/Users/shivam/Development/VS Code/HackAthon18Frontend/src/component/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Conversation from './Conversation';\nimport Messages from './Messages';\nimport { v4 as uuidv4 } from 'uuid';\nimport { allChatHistory, gptResponse,deleteChatHistory, saveMessage } from '../services/chatService';\nimport { formatDistanceToNow } from 'date-fns';\nimport Header from './Header';\nimport {APPLICATION_NAME} from '../Utils/constants'\nimport { getCookie, getSubjectFromJwt, getTextBeforeAt } from '../Utils/helper';\nconst Chat = () => {\n    const [data, setData] = useState([]);\n    const [selectedChatId, setSelectedChatId] = useState(null);\n\n    const fetchChatHistory = async () => {\n        try {\n            const response = await allChatHistory();\n            // sort in descending order: newest first\n            const sortedResponse = response.sort((a, b) => {\n                const aTime = new Date(a.messages[0].timestamp);\n                const bTime = new Date(b.messages[0].timestamp);\n\n                return bTime - aTime;\n            });\n            const modifiedData = sortedResponse.map((item) => ({\n                chatId: item.chat_id,\n                time: formatDistanceToNow(new Date(item.messages[0].timestamp), {\n                    addSuffix: true,\n                }),\n                message: item.messages[0].content,\n            }));\n            setData([...modifiedData]);\n        } catch (error) {\n            console.error(\"Error fetching chat history:\", error);\n        }\n    };\n\n    useEffect(() => {\n        fetchChatHistory();\n    }, []); // fetch chat history on initial render\n\n    const handleNewChatClick = async () => {\n        const chat_id = uuidv4();\n        try {\n            const username = getTextBeforeAt(getSubjectFromJwt(getCookie()));\n            await saveMessage(chat_id, \"Hi\"+username+\", How can i help you\");\n            fetchChatHistory(); // re-fetch chat history after creating a new chat\n            setSelectedChatId(chat_id)\n        } catch (error) {\n            console.error(\"Error creating new chat:\", error);\n        }\n    };\n\n    const handleChatSelect = (chatId) => {\n        setSelectedChatId(chatId);\n    };\n\n    const handleChatDelete=(chatId) =>{\n        //todo\n        deleteChatHistory(chatId);\n    }\n\n    return (\n        <div className=\"h-screen flex flex-col\">\n            <div className=\"\">\n                <Header />\n            </div>\n            <div className=\"flex flex-grow overflow-hidden  mt-px bg-white dark:bg-[#171717]\">\n            <div className=\"w-80 h-full  p-2 hidden md:block \">\n                    <div className=\"h-full overflow-y-auto\">\n                        <div className=\"text-xl font-extrabold text-white p-3\">{APPLICATION_NAME}</div>\n                        <div className=\"flex justify-between\">\n                            <div className=\"text-lg font-semibold text-white p-3\">Recent</div>\n                            <div\n                                className=\"text-lg font-semibold text-white p-3 cursor-pointer hover:text-gray-300\"\n                                onClick={handleNewChatClick}\n                            >\n                                New Chat\n                            </div>\n                        </div>\n                        <Conversation data={data} onClick={handleChatSelect} onDelete={handleChatDelete}/>\n                    </div>\n                </div>\n                <div className=\"flex-grow h-full p-2 rounded-md overflow-y-auto\">\n                    <Messages chatId={selectedChatId} />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}