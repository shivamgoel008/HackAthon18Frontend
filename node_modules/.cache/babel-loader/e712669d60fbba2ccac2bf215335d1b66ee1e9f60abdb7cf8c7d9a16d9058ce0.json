{"ast":null,"code":"var _jsxFileName = \"/Users/shivam/Development/VS Code/HackAthon18Frontend/src/component/ProtectedRoute.jsx\";\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { getCookie } from '../Utils/helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const token = getCookie();\n  const isTokenExpired = token => {\n    if (!token) return true;\n    try {\n      const decoded = token;\n      const currentTime = Date.now() / 1000;\n      return decoded.exp < currentTime;\n    } catch (error) {\n      console.error(\"Error decoding token\", error);\n      return true;\n    }\n  };\n  if (!token || isTokenExpired(token)) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 26\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Redirect","Route","getCookie","jsxDEV","_jsxDEV","ProtectedRoute","component","Component","rest","token","isTokenExpired","decoded","currentTime","Date","now","exp","error","console","to","fileName","_jsxFileName","lineNumber","columnNumber","render","props","_c","$RefreshReg$"],"sources":["/Users/shivam/Development/VS Code/HackAthon18Frontend/src/component/ProtectedRoute.jsx"],"sourcesContent":["import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nimport { getCookie } from '../Utils/helper';\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n  const token = getCookie(); \n  const isTokenExpired = (token) => {\n    if (!token) return true;  \n\n    try {\n      const decoded = (token);  \n      const currentTime = Date.now() / 1000; \n      return decoded.exp < currentTime;  \n    } catch (error) {\n      console.error(\"Error decoding token\", error);\n      return true;  \n    }\n  };\n\n  if (!token || isTokenExpired(token)) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => <Component {...props} />}  \n    />\n  );\n};\n\nexport default ProtectedRoute;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,KAAK,QAAQ,kBAAkB;AAElD,SAASC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,SAAS,EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,KAAK;EAC5D,MAAMC,KAAK,GAAGP,SAAS,CAAC,CAAC;EACzB,MAAMQ,cAAc,GAAID,KAAK,IAAK;IAChC,IAAI,CAACA,KAAK,EAAE,OAAO,IAAI;IAEvB,IAAI;MACF,MAAME,OAAO,GAAIF,KAAM;MACvB,MAAMG,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI;MACrC,OAAOH,OAAO,CAACI,GAAG,GAAGH,WAAW;IAClC,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,OAAO,IAAI;IACb;EACF,CAAC;EAED,IAAI,CAACP,KAAK,IAAIC,cAAc,CAACD,KAAK,CAAC,EAAE;IACnC,oBAAOL,OAAA,CAACJ,QAAQ;MAACkB,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5B;EAEA,oBACElB,OAAA,CAACH,KAAK;IAAA,GACAO,IAAI;IACRe,MAAM,EAAGC,KAAK,iBAAKpB,OAAA,CAACG,SAAS;MAAA,GAAKiB;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEN,CAAC;AAACG,EAAA,GAzBIpB,cAAc;AA2BpB,eAAeA,cAAc;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}